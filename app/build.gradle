/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.1/userguide/building_java_projects.html
 */

plugins {
    id 'application'
    id 'java'
    id 'io.freefair.lombok' version '8.6'
    id 'org.springframework.boot' version '3.3.1'
    id 'com.diffplug.spotless' version '6.25.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

bootJar {
    archiveFileName = 'spring-service-skeleton.jar'
}

dependencies {
    def springVersion = "3.3.1"
    def junitVersion = "5.10.3"
    
    implementation "org.springframework.boot:spring-boot-starter-actuator:$springVersion"
    implementation "org.springframework.boot:spring-boot-starter-web:$springVersion"
    implementation "org.springframework.boot:spring-boot-starter-security:$springVersion"
    implementation "org.springframework.boot:spring-boot-starter-cache:$springVersion"

    implementation 'ch.qos.logback:logback-classic:1.5.6'
    
    // FOR ClassNotFoundException javax.xml.bind.JAXBException
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    // FOR REST TEMPLATE
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'

    // IF USING JPA
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$springVersion"

    // IF USING JDBC
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc:$springVersion"

    // IF USING MONGO
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:$springVersion"
    implementation "org.springframework.boot:spring-boot-starter-data-rest:$springVersion"

    // IF USING SWAGGER
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // IF USING APP IN A MICROSERVICES CLUSTER WITH GATEWAY, THIS WILL LOG TRACE/SPAN
    implementation 'io.micrometer:micrometer-tracing-bridge-otel:1.3.1'

    // FOR TESTING
    testImplementation("org.springframework.boot:spring-boot-starter-test:$springVersion") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // IF USING ELK STACK OR OTHER JSON LOGGING DRIVER
    // ALSO UPDATE LOGBACK.XML
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
}

application {
    mainClass = 'spring.service.skeleton.App'
}

configurations {
    implementation.exclude module: 'spring-boot-starter-logging'
    implementation.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

spotless {
    java {
        removeUnusedImports()
        googleJavaFormat()
    }
}
